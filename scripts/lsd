#!/bin/bash 
#source "${ENTITIES:-/lib/include/entities}/entities.bash.min" || exit 2
#source "${OKROOT}/entities/entities.bash" || exit 2
source entities
	trap.set on
	strict.set off
	version.set 0.96
	verbose.set on

main() {
	local -i Level=1
	local ls='' timeformat='%F %T'
	declare -a cmd=()
	while (($#)); do
		case "$1" in
			--ls|-ls)							ls='-pugsD --timefmt=%y-%M-%dT%R';;
			-L|--levels|--level)	shift; Level=${1:-255};;
			-n|--nocolor)					color.set off; cmd+=('-n');;
			-C|--color)						color.set on;	 cmd+=('-C');;
			-V|--version)					printTitle; exit 0;;
			-h|--help|--manpage)	usage;;
			--)										shift; cmd+=( "$@" ); break;;
			*)										cmd+=( "$1" ) ;;
		esac
		shift
	done
	(( ${#cmd[@]} )) || cmd=( '.' )
	
	while [ ! -x "$(which tree)" ]; do
		ask.yn "$PRG: The 'tree' program has not been installed. Install now?" \
				|| msg.die "$PRG: tree is not installed."
		msg.info "$PRG: Installing tree program..." ""
		apt-get -qq install tree || msg.die "$PRG: Could not install tree."
	done
	
	$(which tree) -d -L $Level $ls --dirsfirst "${cmd[@]}"

	return 0
}

printTitle() { echo "$PRG vs $(version.set)"; }

usage() {
	cat <<-eot
	Script  : lsd
	Version : $(version.set)
	Desc    : Wrapper script for 'tree'. Display directory tree starting at {pathspec}.
	Synopsis: $PRG [-ls] [--levels num] [--treeopts...] [pathspec ...] 
	        : If not specified, {pathspec} defaults to current directory.
	Options :
	        :  -L|--levels num Traverse maximum num levels. Default 1,0=255.
	        :  --ls            Output file with ls type listing
	        :  --              Rest of arguments/options pass to 'tree'.
	        :                  (See 'tree --help' for additional options.)
	        :  -n|--nocolor    Don't use color.
	        :  -C|--color      Use color. (Default if terminal.)
	        :  -V|--version    Print version information.
	        :  -h|--help       Help.
	Depends : entities.bash tree
	eot
	exit 0
}

main "$@"
#fin
