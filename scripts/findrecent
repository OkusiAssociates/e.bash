#!/bin/bash
	declare -ax hb_PRUNE
	[[ -z "${hb_PRUNE[*]:-}" ]] \
			&& hb_PRUNE=( '~*' '*~' '*gudang' '*.gudang' '*.old' '*.bak' '*dev' '*help' '*cctv' '*.git' 'git' )
	export hb_PRUNE
	
main() {
	local -i headn=10 Prune=1
	local -a adir=()
	local dir='' xpath='' xdot=''
	
	while (($#)); do
		case "$1" in
			-p|--prune)			shift; hb_PRUNE+=( "${1:-}" ); Prune=1;;
			-N|--no-prune)	hb_PRUNE=(); Prune=0;;
			-n|--headnum)		shift; headn=${1:- 10};;
			-h|--help)			usage; return 0;;
			-?)							echo >&2 "Bad option [$1]"; return 22;;
			*)							adir+=( "$1" );;
		esac
		shift
	done
	(( ${#adir[@]} )) || adir=( '.' )

	for dir in "${adir[@]}"; do
		xpath=''
		if ((Prune)); then
			xdot=''
			[[ ${dir} == '.' || ${dir:0:2} == './' ]] && xdot='./'
			[[ ${dir:0:3} == '../' ]] && xdot='../' 
			[[ ${dir:0:4} == '.../' ]] && xdot='../../'
			for p in "${hb_PRUNE[@]}"; do 
				xpath+="-type d -path ${xdot}${p} -prune -o "
			done
		fi
		#dir=$(readlink -f "$dir")
		echo >&2 "Finding [$headn] most recent files in [$dir]"
		((Prune)) && echo >&2 "Filtering Dirs: ${hb_PRUNE[*]}"
		# shellcheck disable=SC2086
		find "$dir" $xpath \( -type f -exec stat --format '%Y :%y %n' {} \; \) \
				| sort -nr | head -n "$headn" | cut -d: -f2- \
				| sed 's/\.[0-9 +]* / /'
	done
}



usage() {
	cat <<-etx
	Script  : findrecent
	Desc    : Find 'n' most recently updated files in directory.
	Synopsis: findrecent [-n num] [-p "dir"][-N] ["dir"]
	        :   dir        Directory spec. Default '.'
	        :   -n|--headnum num  
	        :              Number of files to display. Default 10
	        :   -p|--prune "dir"
	        :              Add dir to hb_PRUNE. Enable Prune.
	        :   -N|--no-prune
	        :              Clear hb_PRUNE. Disable Prune.
	        : Prune is enabled by default.
	        : Current hb_PRUNE value is:
	        :   ( ${hb_PRUNE[*]} )
	        :
	Example : findrecent /var/www -n 15
	        :
	        : findrecent /internet -N -p '*KLIEN'
		etx
}

main "$@"
#fin
