#---Script--hashbang
    Script: hashbang
   Version: entities 0.97.420.465.4
          :  0.98
          :  0.97
          :  0.97
      Desc: Use 'find' and 'grep' to search directory recursively for
          :  files identified as bash scripts, ignoring all other files.
          :  Identification is by filename extension, a hashbang
          :  containing '/bash', or by result from 'file' command.
  Synopsis: hashbang ["dir"] [-s str] [-b php|php] [-X][-Y][-e]
          :           [-p str][-x str][-f str] [-l] [-v][-q] [--]
          :    dir                    Directory to start search (def. '.')
          :    -s|--search "str"      String to find in found files.
          :    -b|--hashbang bash|php File type to search (def. bash)
          :    -X|--hb-exclude        Exclude using envvar hb_EXCLUDE.
          :    -Y|--no-hb-exclude     Do not use hb-exclude.
          :    -e|--exclude 'expr'    Add 'expr' to hb_EXCLUDE. Enables -X;
          :                           re-disable with -Y.
          :    -f|--padfix "str"      Spacer for pre/suffix (def. ' ').
          :                           For no spacer: -f ''
          :    -p|--prefix "prefix"   Prefix found files with "prefix".
          :    -x|--suffix "suffix"   Suffix found files with "suffix".
          :    -l|--nolf              No line feed at end of filename.
          :    -v|--verbose           Verbose (default). Enable messages.
          :    -D|--debug             Increase verbosity. Enables -v.
          :    -q|--quiet             No messages. Disables -v -D.
          :    --|--grep              Pass remaining parameters to grep.
          :  Note: All non-hashbang options are passed onto grep.
   Example: # 0. recursively find all qualified bash script filenames
          :  hashbang
          :  # 1. print bash filenames for string matching pattern
          :  hashbang -s '^whereisit'
          :  # 2. print bash filenames containing string 'varname' in format
          :  #    "p {filename} -s". Useful for generating temporary scripts.
          :  #    In this case, I wish to edit {filename} (using the entities
          :  #    'p' editor) with shellcheck enabled.
          :  hashbang -s 'some_var_name' -p 'p' -x '-s' >editfiles
    Source: /usr/share/okusi/entities/scripts/scripts.help.bash
#---Script--hashbang----------------------------------------------------------
