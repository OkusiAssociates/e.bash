#!/bin/bash
#These shell commands are defined internally.  Type `help' to see this list.
<<-
job_spec [&]                                   
(( expression ))                               
. filename [arguments]                         
:                                              
[ arg... ]                                     
[[ expression ]]                               
alias [-p] [name[=value] ... ]                 
bg [job_spec ...]                              
bind [-lpsvPSVX] [-m keymap] [-f filename] [-> 
break [n]                                      
builtin [shell-builtin [arg ...]]              
caller [expr]                                  
case WORD in [PATTERN [| PATTERN]...) COMMAND> 
cd [-L|[-P [-e]] [-@]] [dir]                   
command [-pVv] command [arg ...]               
compgen [-abcdefgjksuv] [-o option]  [-A acti> 
complete [-abcdefgjksuv] [-pr] [-DE] [-o opti> 
compopt [-o|+o option] [-DE] [name ...]        
continue [n]                                   
coproc [NAME] command [redirections]           
declare [-aAfFgilnrtux] [-p] [name[=value] ..> 
dirs [-clpv] [+N] [-N]                         
disown [-h] [-ar] [jobspec ...]                
echo [-neE] [arg ...]                          
enable [-a] [-dnps] [-f filename] [name ...]   
eval [arg ...]                                 
exec [-cl] [-a name] [command [arguments ...]> 
exit [n]                                       
export [-fn] [name[=value] ...] or export -p   
false                                          
fc [-e ename] [-lnr] [first] [last] or fc -s > 
fg [job_spec]                                  
for NAME [in WORDS ... ] ; do COMMANDS; done   
for (( exp1; exp2; exp3 )); do COMMANDS; done> 
function name { COMMANDS ; } or name () { COM> 
getopts optstring name [arg]                   
hash [-lr] [-p pathname] [-dt] [name ...]      
help [-dms] [pattern ...]                                                                       
history [-c] [-d offset] [n] or history -anr>
if COMMANDS; then COMMANDS; [ elif COMMANDS;>
jobs [-lnprs] [jobspec ...] or jobs -x comma>
kill [-s sigspec | -n signum | -sigspec] pid>
let arg [arg ...]
local [option] name[=value] ...
logout [n]
mapfile [-n count] [-O origin] [-s count] [->
popd [-n] [+N | -N]
printf [-v var] format [arguments]
pushd [-n] [+N | -N | dir]
pwd [-LP]
read [-ers] [-a array] [-d delim] [-i text] >
readarray [-n count] [-O origin] [-s count] >
readonly [-aAf] [name[=value] ...] or readon>
return [n]
select NAME [in WORDS ... ;] do COMMANDS; do>
set [-abefhkmnptuvxBCHP] [-o option-name] [->
shift [n]
shopt [-pqsu] [-o] [optname ...]
source filename [arguments]
suspend [-f]
test [expr]
time [-p] pipeline
times
trap [-lp] [[arg] signal_spec ...]
true
type [-afptP] name [name ...]
typeset [-aAfFgilrtux] [-p] name[=value] ...>
ulimit [-SHabcdefilmnpqrstuvxT] [limit]
umask [-p] [-S] [mode]
unalias [-a] name [name ...]
unset [-f] [-v] [-n] [name ...]
until COMMANDS; do COMMANDS; done
variables - Names and meanings of some shell>
wait [-n] [id ...]
while COMMANDS; do COMMANDS; done
{ COMMANDS ; }

