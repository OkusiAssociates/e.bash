#!/bin/bash
source $ENTITIES/entities.bash new || exit 1
	version.set '0.4.420.0.0'
	verbose.set on
	strict.set off

main() {
	is.root || { msg.err "Require root access."; exit 1; }
	local -i auto=0
	local -a cmd=()

	while (($#)); do
		case "$1" in
			-V|--version)	msg "entities.bash $(version.set)"; exit 0;;
			-h|--help)		usage exit;;
			-v|--verbose)	verbose.set on;;
			-q|--quiet)		verbose.set off;;
			-y|--auto)		auto=1; color.set off;;
			*)						cmd+=( "$1" );;
		esac
		shift
	done

	intro

	if ((auto==0)); then
		local v=$(verbose.set)
		verbose.set on 
		msg.info "This script will update ~/.bash_aliases for all users on this machine." 
		if ! ask.yn "Continue?"; then
			exit 1
		fi
		verbose.set $v
	fi
	
	local IFS=$'\n'
	declare -A abfull aufull
	local -a arr
	local a head

	baliases=$PRGDIR/std.bash_aliases
	[[ -f $baliases ]] || msg.die "$baliases not found!"
	arr=$( cat $baliases | sort -u -k2 )	
	for a in ${arr[@]}; do
		head=${a%%=*}; head=$(trim ${head#* })
		[[ $head == '' ]] && continue
		abfull["$head"]="$a"
	done

	tab.set ++
	for u in /home/*; do 
		user="$(basename "$u")"
		id "$user" &>/dev/null || {
			msg.warn "User $user does not exist.";
			continue;
		}

		ualiases="/home/$user/.bash_aliases"
		if [[ -f "$ualiases" ]]; then
			msg.info "Creating ${ualiases}..."
			touch "$ualiases"
			chown "$user" "$ualiases"
		fi
		uowner=$(stat --printf='%U:%G' $ualiases)

		arr=$( cat $ualiases | grep -v "^#" | sort -u -k2 )	
		for a in ${arr[@]}; do
			head=${a%%=*}; head=$(trim ${head#* })
			[[ $head == '' ]] && continue
			aufull["$head"]="$a"
		done

		# merge standard aliases into user aliases
		for a in ${abfull[@]}; do
			head=${a%%=*}; head=${head#* }
			aufull["$head"]="$a"
		done

		# echo out merged aliases
		(	echo "# $ualiases was modified by $PRG on $(date +'%F @%T')."
			for a in ${aufull[@]}; do
				echo "$a"
			done | sort -u -k2
		) > "$ualiases"

		chown "$uowner" "$ualiases"
		chmod 640 "$ualiases"
	done
	tab.set --

}

cleanup() {
	if [[ "${1:-}" == '' ]];	then exitcode="$?"
														else exitcode="$1"
	fi
	exit $exitcode
}

intro() {
	tab.set 0
	msg "$PRG vs $(version.set)" "Update .bash_aliases to standard for all users in /home." ""
	tab.set ++
}
usage() {
	intro
	cat <<-usage
		Usage: $PRG [-y|--auto] [-v|--verbose] [-q|--quiet]  
		            [-h|--help] [-V|--version]

		See Also: $PRGDIR/std.bash_aliases # for definitions.

	usage
	[[ ${1:-} == 'exit' ]] && exit 1
	return 0
}

main "$@"
#fin
