#!/bin/bash
source "$(dirname "$0")/entities.bash" || { echo >&2 "Could not open [$(dirname "$0")/entities.bash]."; exit 1; }
	strict.set off
	trap.set on
	
	declare HelpFilesDir="$PRGDIR/docs/help"

main() {
	# sanity check first
	[[ ! -d "$HelpFilesDir" ]]	&& msg.die "Help files directory [$HelpFilesDir] not found."

	# everything happens here
	cd "$HelpFilesDir" 					|| msg.die "Could not cd into [$HelpFilesDir]!"

	local -a HelpFile=() 
	local Search=''
	local -i synopsis=0 reentry=0 err=0

	while (($#)); do
		case "$1" in
			-a|--all)				HelpFile+=( '*' ) 			;;
			-s|--search)		shift; Search="${1:-}"	;;
			-t|--tree)			display_tree; return $?	;;
			-V|--version)		echo "entities ${_ent_VERSION:-}"; return 0;;
			-v|--verbose)		verbose.set on					;;
			-q|--quiet)			verbose.set off			 		;;
			-h|--help)			usage; return 1					;;
			--reentry)			reentry=1								;;
			*)							HelpFile+=( "${1}" )		;;
		esac
		shift
	done

	# nothing specified, so present helpfiles tree
	if (( !( ${#HelpFile[@]} || ${#Search} || synopsis) )); then
		display_tree
		return $?
	fi

	# present a synopsis #TODO
	if ((synopsis)); then
		synopsis=$(grep --color=never -sih '^Synopsis' ./*)
		#synopsis=$(sed '/Synopsis :/d' <<<$synopsis))
		echo -e "$synopsis"
		return $?
	fi
	
	# re-entry for Search
	if [[ -n "$Search" ]] && (( ! reentry )); then
		s=( $(grep --color=never -silr "${Search}" "$HelpFilesDir/" ) )
		main "${s[@]}" --reentry
		return $?
	fi
	
	# lookup function/topic name as filename 
	numhelpfiles=$(( ${#HelpFile[@]} ))
	for s in $"{HelpFile[@]}"; do
		if [[ -f "${s}" ]]; then
			if ((numhelpfiles<2)); then
				grep --color=never -v "#-" "${s}"
			else
				cat "${s}"
			fi
		else
			err=1
			msg.err "Help file [${s}] not found."
		fi
	done
	return $err
}

display_tree() {
	local tmp
	local htmfile='index.html'
	local pwd="$PWD"
	local browser
	browser="$(which lynx || which w3m)"
	
	if [[ ! -f "$HelpFilesDir/$htmfile" ]]; then
		msg.info "Creating [$htmfile]..."
		cd "$HelpFilesDir" || msg.die "Could not cd into [$HelpFilesDir]."

		/usr/bin/tree --dirsfirst --noreport -H ./ -T 'entities.bash help files' "$(pwd)" > "$htmfile"
		
		# clean up html output
		tmp=$(cat "$htmfile")
		tmp="${tmp//<!--/}" 
		tmp="${tmp//-->${LF}/}" 
		tmp="${tmp//<p class=\"VER*\/p>/}" 
		tmp="${tmp//<\/style>/H1,h1 \{text-align:left;color:green;\}${LF}<\/style>}"
		# blast it back to the html file
		echo "$tmp" > $htmfile
		chmod 666 "$htmfile"
		cd "$pwd"
	fi
	
	$browser "$HelpFilesDir/index.html" 

	return 0 
}

cleanup() {
	local -i exitcode=$?
	(($#)) && exitcode=$1
	exit "$exitcode"
}

usage() {
	cat <<-usage
	Script  : $PRG
	Version : entities ${_ent_VERSION:-}
	Synopsis: $PRG [-a][-t][-s "search"][name]  [-v][-q] [-V] [-h] 
	        :  name          Any entities function|globalx|global|file
	        :  -a|--all      Show all help files in using BROWSER.
	        :  -t|--tree     Show interactive web tree of all functions.
	        :  -s|--search   Wildcard search all help files for keyword.
	        :  -v|--verbose  Turn on  msg verbose. (default)
	        :  -q|--quiet    Turn off msg verbose.
	        :  -V|--version  Print version.
	        :  -h|--help     This help.
	Example : $PRG msg.info msg.line 
	usage
}

main "$@"
#fin
