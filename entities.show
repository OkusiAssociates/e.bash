#!/bin/bash
source entities || exit 2
	# shellcheck disable=2154
	version.set "$_ent_VERSION"
	msg.verbose.set on
	trap.set on
	strict.set on
	msg.prefix.set "$PRG"

	declare -i ShowFuncs=0 ShowVars=0	
	
	declare -x nonentities=" CH9 CLNTEMPFILES CR EDITOR IFS LF OLDIFS PRG PRGDIR _ent_TABSET _ent_TABWIDTH _slog_count _slog_file _slog_prefix color0 coloralert colorcrit colorcritical colordebug coloremerg colorerr colorerror colorinfo colornotice colorpanic colorreset colorwarn colorwarning perrnoListFile "
	declare -x legacyfunctions

main() {
	local -a funcs=() vars=()
	local func var
	while (( $# )); do
		case "$1" in
			-f|--funcs|functions)
											ShowFuncs=1;;
			-v|--vars|variables)
											ShowVars=1;;
			-V|--version)		version.set; echo; return 0;;
			-h|--help)			usage; return 0;;
			-?|--*)					msg.err "Invalid option [$1]"; return 22;;
			*)							msg.err "Invalid argument [$1]"; return 22;;
		esac
		shift
	done
	((ShowFuncs+ShowVars)) || { usage; return 1; }	

	if ((ShowFuncs)); then
		legacyfunctions="$(echo ' '; grep '.*().*#X[[:blank:]]*legacy[[:blank:]]X#' "$PRGDIR"/entities.bash | while read -r l;do echo -n "${l%\(\)[[:blank:]]*} "; done)" || return 1
		cmd='source '"$PRGDIR"'/entities.bash new || exit; set |/bin/grep "()" |/bin/grep -v "=" |/bin/grep "^[a-zA-Z][a-zA-Z0-9_.]*[[:blank:]]*\(\)" | /bin/grep -v "^$"'
		funcs=( "$(env -i bash --norc -c "$cmd")" )
		( for func in ${funcs[*]}; do
				func=${func//\(\)/}; func=${func// /};
				[[ -z $func ]] && continue
				if [[ ! "$legacyfunctions" == *\ $func\ * ]]; then
					echo "$func"
				fi
			done 
		) | sort
	fi
	
	if ((ShowVars)); then		
		IFS=$'\n'
		vars=( "$( env -i bash --norc -c "source $PRGDIR/entities.bash new; declare -p | grep 'declare[[:blank:]]*[aAfFgilnprtux-]*[[:blank:]]*[a-zA-Z0-9_]*=' -o | cut -d' ' -f3" )" )
		## shellcheck disable=SC2068
		( for var in ${vars[*]}; do
				var=${var%%=*}
				var=$(echo "$var" | cut -d' ' -f3)
				[[ -z $var ]] && continue
				if [[ $var == _ent_* ]]; then
					echo "$var"
				else
					[[ ! "${nonentities}" == *\ $var\ * ]] && echo "$var"
				fi
			done 
		) | sort
	fi
}

# shellcheck disable=SC2086
cleanup() {
	local -i err=$?
	[[ -z ${1:-} ]] && err=$1
	(( err > 1 )) && errno $err
	exit $err
}

usage() {
	cat <<-usage
	Script  : $PRG
	Desc    : Show all entities.bash functions and variables.
	Synopsis: $PRG [-f] [-v] [-V] [-h]
	        :   -f|--funcs  Show entities functions
	        :   -v|--vars   Show entities variables
	        : If no options specified, show all.
	usage
	return 0
}

main "$@"
#fin
